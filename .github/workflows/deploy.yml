name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Images to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and Push Images
        run: |
          docker build -t ${{ secrets.017915196107.dkr.ecr.us-east-1.amazonaws.com/smartgaurd }}:app-latest -f Dockerfile .
          docker push ${{ secrets.017915196107.dkr.ecr.us-east-1.amazonaws.com/smartgaurd }}:app-latest

          docker build -t ${{ secrets.017915196107.dkr.ecr.us-east-1.amazonaws.com/smartgaurd }}:producer-latest -f Dockerfile .
          docker push ${{ secrets.017915196107.dkr.ecr.us-east-1.amazonaws.com/smartgaurd }}:producer-latest

          docker build -t ${{ secrets.017915196107.dkr.ecr.us-east-1.amazonaws.com/smartgaurd }}:consumer-latest -f Dockerfile .
          docker push ${{ secrets.017915196107.dkr.ecr.us-east-1.amazonaws.com/smartgaurd }}:consumer-latest

          docker build -t ${{ secrets.017915196107.dkr.ecr.us-east-1.amazonaws.com/smartgaurd }}:streamlit-latest -f Dockerfile .
          docker push ${{ secrets.017915196107.dkr.ecr.us-east-1.amazonaws.com/smartgaurd }}:streamlit-latest

  deploy:
    name: Deploy to EC2
    runs-on: self-hosted
    needs: build-and-push

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull latest images and restart
        run: |
          docker compose pull
          docker compose up -d --remove-orphans
