version: '3.8'

services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - kafka_data:/bitnami/kafka
    restart: unless-stopped

  app:
    build: .
    container_name: app
    command: ["python3", "api/app.py"]
    ports:
      - "8000:8000"
    depends_on:
      - kafka

  producer:
    build: .
    container_name: producer
    command: ["python3", "streaming/kafka_producer.py"]
    depends_on:
      - kafka

  consumer:
    build: .
    container_name: consumer
    command: ["python3", "streaming/kafka_consumer.py"]
    depends_on:
      - kafka
      - app

  streamlit:
    build: .
    container_name: streamlit
    command: ["streamlit", "run", "streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]
    ports:
      - "8501:8501"
    depends_on:
      - consumer
      - app

volumes:
  kafka_data:
